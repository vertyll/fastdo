services:
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fastdo
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-db:
    image: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fastdo
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mail-dev:
    image: maildev/maildev
    restart: always
    ports:
      - "1025:1025"
      - "1080:1080"

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
      target: development
    volumes:
      - ./:/app
      - backend-node-modules:/app/node_modules
    ports:
      - "3000:3000"
      - "9229:9229" # for debugging
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/fastdo
      - TEST_DATABASE_URL=postgresql://postgres:postgres@test-db:5432/fastdo
      - MAIL_HOST=mail-dev
      - MAIL_PORT=1025
    depends_on:
      db:
        condition: service_healthy
      test-db:
        condition: service_healthy
      mail-dev:
        condition: service_started
    command: pnpm run docker:dev:backend

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
      target: development
    volumes:
      - ./:/app
      - frontend-node-modules:/app/node_modules
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=development
      - API_URL=http://backend:3000
    depends_on:
      - backend
    command: pnpm run docker:dev:frontend

volumes:
  postgres-data:
  backend-node-modules:
  frontend-node-modules:
