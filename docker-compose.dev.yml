services:
  db:
    image: postgres:${POSTGRES_VERSION}-alpine
    restart: always
    ports:
      - "${POSTGRES_HOST_DB_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-db:
    image: postgres:${POSTGRES_VERSION}-alpine
    restart: always
    ports:
      - "${POSTGRES_HOST_TEST_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  mail-dev:
    image: maildev/maildev:latest
    restart: always
    ports:
      - "${MAIL_SMTP_PORT}:1025"
      - "${MAIL_WEB_PORT}:1080"

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
      target: development
      args:
        - NODE_VERSION=${NODE_VERSION}
    volumes:
      - ./:/app
      - backend-node-modules:/app/node_modules
    ports:
      - "${BACKEND_PORT}:3000"
      - "${BACKEND_DEBUG_PORT}:9229"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - TEST_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@test-db:5432/${POSTGRES_DB}
      - MAIL_HOST=mail-dev
      - MAIL_PORT=${MAIL_SMTP_PORT}
    depends_on:
      db:
        condition: service_healthy
      test-db:
        condition: service_healthy
      mail-dev:
        condition: service_started
    command: pnpm run docker:dev:backend

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
      target: development
      args:
        - NODE_VERSION=${NODE_VERSION}
    volumes:
      - ./:/app
      - frontend-node-modules:/app/node_modules
    ports:
      - "${FRONTEND_PORT}:4200"
    environment:
      - NODE_ENV=${NODE_ENV}
      - API_URL=http://backend:3000
    depends_on:
      - backend
    command: pnpm run docker:dev:frontend

volumes:
  postgres-data:
  backend-node-modules:
  frontend-node-modules: